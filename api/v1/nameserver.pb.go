// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/stellarproject/atlas/api/v1/nameserver.proto

package v1

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type RecordType int32

const (
	RecordType_UNKNOWN RecordType = 0
	RecordType_A       RecordType = 1
	RecordType_AAAA    RecordType = 2
	RecordType_CNAME   RecordType = 3
	RecordType_MX      RecordType = 4
	RecordType_TXT     RecordType = 5
	RecordType_SRV     RecordType = 6
)

var RecordType_name = map[int32]string{
	0: "UNKNOWN",
	1: "A",
	2: "AAAA",
	3: "CNAME",
	4: "MX",
	5: "TXT",
	6: "SRV",
}

var RecordType_value = map[string]int32{
	"UNKNOWN": 0,
	"A":       1,
	"AAAA":    2,
	"CNAME":   3,
	"MX":      4,
	"TXT":     5,
	"SRV":     6,
}

func (x RecordType) String() string {
	return proto.EnumName(RecordType_name, int32(x))
}

func (RecordType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_40b8f047904a2b5e, []int{0}
}

type Record struct {
	Type                 RecordType `protobuf:"varint,1,opt,name=type,proto3,enum=io.stellarproject.atlas.api.v1.RecordType" json:"type,omitempty"`
	Name                 string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Value                string     `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Options              *types.Any `protobuf:"bytes,4,opt,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Record) Reset()         { *m = Record{} }
func (m *Record) String() string { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()    {}
func (*Record) Descriptor() ([]byte, []int) {
	return fileDescriptor_40b8f047904a2b5e, []int{0}
}
func (m *Record) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Record.Unmarshal(m, b)
}
func (m *Record) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Record.Marshal(b, m, deterministic)
}
func (m *Record) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Record.Merge(m, src)
}
func (m *Record) XXX_Size() int {
	return xxx_messageInfo_Record.Size(m)
}
func (m *Record) XXX_DiscardUnknown() {
	xxx_messageInfo_Record.DiscardUnknown(m)
}

var xxx_messageInfo_Record proto.InternalMessageInfo

func (m *Record) GetType() RecordType {
	if m != nil {
		return m.Type
	}
	return RecordType_UNKNOWN
}

func (m *Record) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Record) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Record) GetOptions() *types.Any {
	if m != nil {
		return m.Options
	}
	return nil
}

type ListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_40b8f047904a2b5e, []int{1}
}
func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

type ListResponse struct {
	Records              []*Record `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListResponse) Reset()         { *m = ListResponse{} }
func (m *ListResponse) String() string { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()    {}
func (*ListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_40b8f047904a2b5e, []int{2}
}
func (m *ListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResponse.Unmarshal(m, b)
}
func (m *ListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResponse.Marshal(b, m, deterministic)
}
func (m *ListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResponse.Merge(m, src)
}
func (m *ListResponse) XXX_Size() int {
	return xxx_messageInfo_ListResponse.Size(m)
}
func (m *ListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListResponse proto.InternalMessageInfo

func (m *ListResponse) GetRecords() []*Record {
	if m != nil {
		return m.Records
	}
	return nil
}

type CreateRequest struct {
	Name                 string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Records              []*Record `protobuf:"bytes,2,rep,name=records,proto3" json:"records,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_40b8f047904a2b5e, []int{3}
}
func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateRequest) GetRecords() []*Record {
	if m != nil {
		return m.Records
	}
	return nil
}

type DeleteRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_40b8f047904a2b5e, []int{4}
}
func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(m, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterEnum("io.stellarproject.atlas.api.v1.RecordType", RecordType_name, RecordType_value)
	proto.RegisterType((*Record)(nil), "io.stellarproject.atlas.api.v1.Record")
	proto.RegisterType((*ListRequest)(nil), "io.stellarproject.atlas.api.v1.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "io.stellarproject.atlas.api.v1.ListResponse")
	proto.RegisterType((*CreateRequest)(nil), "io.stellarproject.atlas.api.v1.CreateRequest")
	proto.RegisterType((*DeleteRequest)(nil), "io.stellarproject.atlas.api.v1.DeleteRequest")
}

func init() {
	proto.RegisterFile("github.com/stellarproject/atlas/api/v1/nameserver.proto", fileDescriptor_40b8f047904a2b5e)
}

var fileDescriptor_40b8f047904a2b5e = []byte{
	// 444 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0x51, 0x8f, 0xd2, 0x40,
	0x10, 0x76, 0x4b, 0x29, 0xde, 0x20, 0xa6, 0x99, 0x10, 0x53, 0x31, 0x31, 0x04, 0x13, 0x83, 0x77,
	0xba, 0x0d, 0xf8, 0xe0, 0x83, 0x89, 0xb1, 0x9e, 0xf7, 0xa4, 0x57, 0x4c, 0x45, 0xbd, 0xf8, 0xb6,
	0xe0, 0x58, 0x6b, 0x4a, 0x77, 0xed, 0x2e, 0x4d, 0xf8, 0x19, 0xfe, 0x05, 0x7f, 0xa9, 0x69, 0x0b,
	0x27, 0x68, 0x3c, 0xc8, 0xbd, 0xcd, 0x74, 0xe6, 0x9b, 0xef, 0x9b, 0xaf, 0xb3, 0xf0, 0x2c, 0x4e,
	0xcc, 0xb7, 0xe5, 0x8c, 0xcf, 0xe5, 0xc2, 0xd7, 0x86, 0xd2, 0x54, 0xe4, 0x2a, 0x97, 0xdf, 0x69,
	0x6e, 0x7c, 0x61, 0x52, 0xa1, 0x7d, 0xa1, 0x12, 0xbf, 0x18, 0xf9, 0x99, 0x58, 0x90, 0xa6, 0xbc,
	0xa0, 0x9c, 0xab, 0x5c, 0x1a, 0x89, 0xf7, 0x13, 0xc9, 0x77, 0x01, 0xbc, 0x02, 0x70, 0xa1, 0x12,
	0x5e, 0x8c, 0x7a, 0xdd, 0x58, 0xc6, 0xb2, 0x6a, 0xf5, 0xcb, 0xa8, 0x46, 0xf5, 0xee, 0xc5, 0x52,
	0xc6, 0x29, 0xf9, 0x55, 0x36, 0x5b, 0x7e, 0xf5, 0x69, 0xa1, 0xcc, 0x6a, 0x5d, 0xbc, 0xfb, 0x77,
	0x51, 0x64, 0xeb, 0xd2, 0xe0, 0x17, 0x03, 0x27, 0xa2, 0xb9, 0xcc, 0xbf, 0xe0, 0x0b, 0xb0, 0xcd,
	0x4a, 0x91, 0xc7, 0xfa, 0x6c, 0x78, 0x7b, 0x7c, 0xcc, 0xaf, 0xd6, 0xc1, 0x6b, 0xd4, 0x74, 0xa5,
	0x28, 0xaa, 0x70, 0x88, 0x60, 0x97, 0xcb, 0x78, 0x56, 0x9f, 0x0d, 0x8f, 0xa2, 0x2a, 0xc6, 0x2e,
	0x34, 0x0b, 0x91, 0x2e, 0xc9, 0x6b, 0x54, 0x1f, 0xeb, 0x04, 0x39, 0xb4, 0xa4, 0x32, 0x89, 0xcc,
	0xb4, 0x67, 0xf7, 0xd9, 0xb0, 0x3d, 0xee, 0xf2, 0x5a, 0x21, 0xdf, 0x28, 0xe4, 0x41, 0xb6, 0x8a,
	0x36, 0x4d, 0x83, 0x0e, 0xb4, 0xdf, 0x26, 0xda, 0x44, 0xf4, 0x63, 0x49, 0xda, 0x0c, 0xde, 0xc1,
	0xad, 0x3a, 0xd5, 0x4a, 0x66, 0x9a, 0xf0, 0x25, 0xb4, 0xf2, 0x4a, 0x8c, 0xf6, 0x58, 0xbf, 0x31,
	0x6c, 0x8f, 0x1f, 0x1e, 0xa6, 0x3d, 0xda, 0xc0, 0x06, 0x04, 0x9d, 0xd3, 0x9c, 0x84, 0xa1, 0x35,
	0xc5, 0xe5, 0x2e, 0x6c, 0x6b, 0x97, 0x2d, 0x1a, 0xeb, 0x7a, 0x34, 0x0f, 0xa0, 0xf3, 0x9a, 0x52,
	0xba, 0x92, 0xe6, 0x78, 0x02, 0xf0, 0xc7, 0x5a, 0x6c, 0x43, 0xeb, 0x43, 0xf8, 0x26, 0x9c, 0x7c,
	0x0a, 0xdd, 0x1b, 0xd8, 0x04, 0x16, 0xb8, 0x0c, 0x6f, 0x82, 0x1d, 0x04, 0x41, 0xe0, 0x5a, 0x78,
	0x04, 0xcd, 0xd3, 0x30, 0x38, 0x3f, 0x73, 0x1b, 0xe8, 0x80, 0x75, 0x7e, 0xe1, 0xda, 0xd8, 0x82,
	0xc6, 0xf4, 0x62, 0xea, 0x36, 0xcb, 0xe0, 0x7d, 0xf4, 0xd1, 0x75, 0xc6, 0x3f, 0x2d, 0x80, 0xf0,
	0xf2, 0xca, 0x50, 0x80, 0x5d, 0xba, 0x87, 0x27, 0xfb, 0xd4, 0x6f, 0x59, 0xde, 0x7b, 0x7c, 0x58,
	0xf3, 0xfa, 0x87, 0x4c, 0xc0, 0xa9, 0xed, 0xc4, 0x27, 0xfb, 0x70, 0x3b, 0xb6, 0xf7, 0xee, 0xfc,
	0x73, 0x07, 0x67, 0xe5, 0x19, 0x97, 0x03, 0x6b, 0xe3, 0xf6, 0x0f, 0xdc, 0x31, 0xf8, 0x7f, 0x03,
	0x5f, 0x9d, 0x7c, 0x7e, 0x74, 0xd8, 0xfb, 0x7c, 0x5e, 0x8c, 0x66, 0x4e, 0x05, 0x7e, 0xfa, 0x3b,
	0x00, 0x00, 0xff, 0xff, 0x1a, 0xc7, 0x9b, 0xe6, 0xd3, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NameserverClient is the client API for Nameserver service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NameserverClient interface {
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*types.Empty, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*types.Empty, error)
}

type nameserverClient struct {
	cc *grpc.ClientConn
}

func NewNameserverClient(cc *grpc.ClientConn) NameserverClient {
	return &nameserverClient{cc}
}

func (c *nameserverClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := c.cc.Invoke(ctx, "/io.stellarproject.atlas.api.v1.Nameserver/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nameserverClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/io.stellarproject.atlas.api.v1.Nameserver/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nameserverClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/io.stellarproject.atlas.api.v1.Nameserver/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NameserverServer is the server API for Nameserver service.
type NameserverServer interface {
	List(context.Context, *ListRequest) (*ListResponse, error)
	Create(context.Context, *CreateRequest) (*types.Empty, error)
	Delete(context.Context, *DeleteRequest) (*types.Empty, error)
}

// UnimplementedNameserverServer can be embedded to have forward compatible implementations.
type UnimplementedNameserverServer struct {
}

func (*UnimplementedNameserverServer) List(ctx context.Context, req *ListRequest) (*ListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedNameserverServer) Create(ctx context.Context, req *CreateRequest) (*types.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedNameserverServer) Delete(ctx context.Context, req *DeleteRequest) (*types.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterNameserverServer(s *grpc.Server, srv NameserverServer) {
	s.RegisterService(&_Nameserver_serviceDesc, srv)
}

func _Nameserver_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NameserverServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.stellarproject.atlas.api.v1.Nameserver/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NameserverServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Nameserver_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NameserverServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.stellarproject.atlas.api.v1.Nameserver/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NameserverServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Nameserver_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NameserverServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.stellarproject.atlas.api.v1.Nameserver/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NameserverServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Nameserver_serviceDesc = grpc.ServiceDesc{
	ServiceName: "io.stellarproject.atlas.api.v1.Nameserver",
	HandlerType: (*NameserverServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _Nameserver_List_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _Nameserver_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Nameserver_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/stellarproject/atlas/api/v1/nameserver.proto",
}
